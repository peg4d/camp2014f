// PEG4d Regex file


File
	= { ( @COMMENT? BREAK / @TopLevel / _  / BREAK )* #File } ( '\u0003' / '\u0004' )*

Chunk
	= TopLevel

TopLevel
	= _ Statement? _

Statement
	= { (@LogOp)+ #regex }

_
	= [ \t]*

COMMENT
	= '#' _ { (!BREAK .)* #comment }

BREAK
	= '\n' / '\r\n' / '\r'

DECDIGIT
	= [0-9]

HEXDIGIT
	= [0-9A-Fa-f]

LETTER
	= W / SYMBOL / UNICODE / ASCII

ESCAPELETTER
	= ESCAPE METACHARACTER #symbol / ESCAPE METALETTER

GROUP
	= ESCAPE { DECDIGIT #BlockNum }

W
	= [a-zA-Z0-9]

ESCAPE
	= '\\'

METACHARACTER
	= '+' / '*' / '?' / '.' / '^' / '$' / '|' / '\\'
	/ '(' / ')' / '[' / ']' / '{' / '}'

METALETTER
	= 'A' #TopOfString 
	/ 'z' #EndOfStringWithoutEOL 
	/ 'Z' #EndOfString 
	/ 'b' #WordBoundary					//	BackSpace??
	/ 'y' #WordBoundary
	/ 'B' #NonWordBoundary
	/ 'Y' #NonWordBoundary
	/ 'w' #Character
	/ 'W' #NonCharacter
	/ 'd' #DecNumber
	/ 'D' #NonDecNumber
	/ 's' #Space
	/ 'S' #NonSpace
	/ 't' #tab
	/ 'n' #LF
	/ 'r' #CR

SYMBOL
	= '&' !'&' / '/' / '@' / '_' / '#' / '%' / ',' / '-' 
	/ ':' / ';' / '<' / '>' / '=' / '~' / '`'

UNICODE
	= '\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT

ASCII
	= '\\x' HEXDIGIT HEXDIGIT

Token
	= { '^' _ @ParenBlock (@Quantifier)? _ '$' #BiginEndStmt }
	/ { '^' _ ( @Character / @Bracket ) (@Quantifier)? _ '$' #BiginEndToken }
	/ { '^' _ @ParenBlock (@Quantifier)? #BiginWithStmt }
	/ { '^' _ ( @Character / @Bracket ) (@Quantifier)? #BiginWithToken }
	/ { @ParenBlock (@Quantifier)? _ '$' #EndWithStmt }
	/ { ( @Character / @Bracket ) (@Quantifier)? _ '$' #EndWithToken }
	/ { @ParenBlock @Quantifier #Stmt }
	/ ParenBlock
	/ { ( @Character / @Bracket ) @Quantifier #Token }
	/ Character
	/ Bracket

Quantifier
	= { '+?' #onemoreS }
	/ { '+'  #onemoreL }
	/ { '*?' #zeromoreS }
	/ { '*'  #zeromoreL }
	/ { '??'  #optionalS }
	/ { '?' '+'?  #optionalL }
	/ { '{' _ @AndMore _ ',' _ @AndFewer _ '}' '?'? #times }
	/ { '{' _ @AndMore _ ',' _ '}' '?'? #times }
	/ { '{' _ ',' _ @AndFewer _ '}' '?'? #times }
	/ { '{' _ @Time? '}' '?'? #times }

AndMore
	= { DECDIGIT+ #andmore }

AndFewer
	= { DECDIGIT+ #andfewer }

Time
	= { DECDIGIT+ #time }

ParenBlock
	= _ '(' _ '?#' _ { (!')' .)* #comment } ')'
	/ { _ '(' _ '?' EXTOPERATOR _ ( @LogOp / @ParenBlock / @Character / @Bracket )+ ')' _ }
	/ { _ '(' ( @LogOp / @ParenBlock / @Character / @Bracket / _ )+ ')' _ #block }

EXTOPERATOR
	= '<=' #LookBehind
	/ '<!' #NegLookBehind
	/ '='  #LookAhead
	/ '!'  #NegLookAhead

Bracket
	= { '[^' (@CLASS / @Item)+ ']' #ExceptFor }
	/ { '['  (@CLASS / @Item)+ ']' #OneOf }

CLASS
	= { '[:' @CLASSNAME ':]' #CharClass }

CLASSNAME
	= { 'alnum' #AlphabetAndDecNum }

Item
	= { @{LETTER #item} '-' @{LETTER #item} #range }
	/ { LETTER #item }

LogOp
	= { (@Token)+ #item } _ {@ ( '&&' #and / '|' #or ) _ @{ (@Token)+ #item } }+
	/ Token

Character
	= { @GROUP #BlockReference / LETTER #Char / ESCAPELETTER / '.' #WildCard }
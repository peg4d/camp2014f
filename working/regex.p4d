// PEG4d Regex file


File
	= _ { ( @TopLevel / _ )* #Source } ( BREAK / EOT )

Chunk
	= TopLevel

TopLevel
	= _? Statement _?

Statement
	= { (@LRMatch)* #toplevel }

S
	= ([ \t] / COMMENT)

_
	= S*

COMMENT
	= '//' (!BREAK .)*

BREAK
	= '\n' / '\r\n' / '\r'

DECDIGIT
	= [0-9]

HEXDIGIT
	= [0-9A-Fa-f]

LETTER
	= W / SYMBOL / UNICODE / ASCII

ESCAPELETTER
	= ESCAPE METACHARACTER / ESCAPE METALETTER

W
	= [a-zA-Z0-9]

ESCAPE
	= '\\'

METACHARACTER
	= '+' / '*' / '?' / '.' / '^' / '$' / '|' / '\\'
	/ '(' / ')' / '[' / ']' / '{' / '}'

METALETTER
	= 'w' / 'W' / 'd' / 'D' / 's' / 'S' / 'b'

SYMBOL
	= '&' / '/' / '@' / '_' / '#' / '%' / ',' / '-' 
	/ ':' / ';' / '<' / '>' / '=' / '~' / '`'

UNICODE
	= '\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT

ASCII
	= '\\x' HEXDIGIT HEXDIGIT

LRMatch
	= { '^' _? ( @ParenBlock / @String ) (@Quantifier)? _? '$' #BiginEndStmt }
	/ { '^' _? ( @ParenBlock / @String ) (@Quantifier)? #BiginWithStmt }
	/ { ( @ParenBlock / @String ) (@Quantifier)? _? '$' #EndWithStmt }
	/ { ( @ParenBlock / @String ) (@Quantifier)? #Stmt }

//Block
//	= { ( @ParenBlock / @String ) (@Quantifier)? #term }

Quantifier
	= { '+' #onemore }
	/ { '*' #zeromore }
	/ { '?' #optional }
	/ { '{' _? @AndMore _? ',' _? @AndFewer _? '}' #times }
	/ { '{' _? @AndMore _? ',' _? '}' #times }
	/ { '{' _? @Time? '}' #times }

AndMore
	= { DECDIGIT+ #andmore }

AndFewer
	= { DECDIGIT+ #andfewer }

Time
	= { DECDIGIT+ #time }

ParenBlock
	= { _? '(' ( @String / @ParenBlock )')' _? #block }

Bracket
	= { '[^' (@Item)+ ']' #ExceptFor }
	/ { '[' (@Item)+ ']' #OneOf }

Item
	= { LETTER '-' LETTER #range }
	/ { LETTER #item }

String
	= { ( @Character / @Bracket )+ #Str }

Character
	= { LETTER #Char / ESCAPELETTER #escape / '.' #WildCard }